<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="8" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="testingauto.Tests" duration-ms="768576" started-at="2019-04-02T12:36:28Z" finished-at="2019-04-02T12:49:16Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="768576" started-at="2019-04-02T12:36:28Z" finished-at="2019-04-02T12:49:16Z">
      <class name="testingauto.Tests">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="31262" started-at="2019-04-02T12:36:28Z" finished-at="2019-04-02T12:36:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="correctLogin()[pri:0, instance:testingauto.Tests@246ae04d]" name="correctLogin" duration-ms="23200" started-at="2019-04-02T12:36:59Z" finished-at="2019-04-02T12:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="4508" started-at="2019-04-02T12:37:22Z" finished-at="2019-04-02T12:37:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=correctLogin status=SUCCESS method=Tests.correctLogin()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="8089" started-at="2019-04-02T12:37:27Z" finished-at="2019-04-02T12:37:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loginEmptyBoth()[pri:0, instance:testingauto.Tests@246ae04d]" name="loginEmptyBoth" duration-ms="3013" started-at="2019-04-02T12:37:35Z" finished-at="2019-04-02T12:37:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginEmptyBoth -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="736" started-at="2019-04-02T12:37:38Z" finished-at="2019-04-02T12:37:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginEmptyBoth status=SUCCESS method=Tests.loginEmptyBoth()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="7325" started-at="2019-04-02T12:37:38Z" finished-at="2019-04-02T12:37:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loginEmptyPass()[pri:0, instance:testingauto.Tests@246ae04d]" name="loginEmptyPass" duration-ms="2341" started-at="2019-04-02T12:37:46Z" finished-at="2019-04-02T12:37:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginEmptyPass -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="739" started-at="2019-04-02T12:37:48Z" finished-at="2019-04-02T12:37:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginEmptyPass status=SUCCESS method=Tests.loginEmptyPass()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="5404" started-at="2019-04-02T12:37:49Z" finished-at="2019-04-02T12:37:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loginEmptyUser()[pri:0, instance:testingauto.Tests@246ae04d]" name="loginEmptyUser" duration-ms="2164" started-at="2019-04-02T12:37:54Z" finished-at="2019-04-02T12:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginEmptyUser -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="778" started-at="2019-04-02T12:37:56Z" finished-at="2019-04-02T12:37:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginEmptyUser status=SUCCESS method=Tests.loginEmptyUser()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="9637" started-at="2019-04-02T12:37:57Z" finished-at="2019-04-02T12:38:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="register()[pri:0, instance:testingauto.Tests@246ae04d]" name="register" duration-ms="283284" started-at="2019-04-02T12:38:07Z" finished-at="2019-04-02T12:42:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="721" started-at="2019-04-02T12:42:50Z" finished-at="2019-04-02T12:42:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register status=SUCCESS method=Tests.register()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="9835" started-at="2019-04-02T12:42:51Z" finished-at="2019-04-02T12:43:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="registerNoConfirmationPwd()[pri:0, instance:testingauto.Tests@246ae04d]" name="registerNoConfirmationPwd" duration-ms="195609" started-at="2019-04-02T12:43:01Z" finished-at="2019-04-02T12:46:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User with: No confirmation password is properly registered expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User with: No confirmation password is properly registered expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at assertpage.AssertPages.assertRegister(AssertPages.java:55)
at testingauto.Tests.registerNoConfirmationPwd(Tests.java:181)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNoConfirmationPwd -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="1543" started-at="2019-04-02T12:46:16Z" finished-at="2019-04-02T12:46:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerNoConfirmationPwd status=FAILURE method=Tests.registerNoConfirmationPwd()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="10029" started-at="2019-04-02T12:46:18Z" finished-at="2019-04-02T12:46:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="registerNoPwd()[pri:0, instance:testingauto.Tests@246ae04d]" name="registerNoPwd" duration-ms="25261" started-at="2019-04-02T12:46:28Z" finished-at="2019-04-02T12:46:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User with: No password is properly registered expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User with: No password is properly registered expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at assertpage.AssertPages.assertRegister(AssertPages.java:55)
at testingauto.Tests.registerNoPwd(Tests.java:164)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNoPwd -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="2005" started-at="2019-04-02T12:46:53Z" finished-at="2019-04-02T12:46:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerNoPwd status=FAILURE method=Tests.registerNoPwd()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testingauto.Tests@246ae04d]" name="setUp" is-config="true" duration-ms="10246" started-at="2019-04-02T12:46:55Z" finished-at="2019-04-02T12:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="registerNoUser()[pri:0, instance:testingauto.Tests@246ae04d]" name="registerNoUser" duration-ms="129304" started-at="2019-04-02T12:47:05Z" finished-at="2019-04-02T12:49:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User with: No username is properly registered expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User with: No username is properly registered expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at assertpage.AssertPages.assertRegister(AssertPages.java:55)
at testingauto.Tests.registerNoUser(Tests.java:145)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNoUser -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testingauto.Tests@246ae04d]" name="tearDown" is-config="true" duration-ms="1417" started-at="2019-04-02T12:49:15Z" finished-at="2019-04-02T12:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerNoUser status=FAILURE method=Tests.registerNoUser()[pri:0, instance:testingauto.Tests@246ae04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testingauto.Tests -->
    </test> <!-- Command line test -->
  </suite> <!-- testingauto.Tests -->
</testng-results>
